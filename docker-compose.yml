version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_USER: ${DB_USER}
      DB_SERVER: ${DB_SERVER}
      DEV_DB_SERVER: ${DEV_DB_SERVER}
      TEST_DB_SERVER: ${TEST_DB_SERVER}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      FLASK_ENV: ${FLASK_ENV}
      DEBUG: ${DEBUG}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_URI: ${KEYCLOAK_URI}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID}
      KAFKA_SUBSCRIPTIONS: ${KAFKA_SUBSCRIPTIONS}
      REDIS_SERVER: ${REDIS_SERVER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: 'flask run --host=0.0.0.0 --port=5000'
    ports:
      - 8000:5000
    volumes:
      - .:/app
    depends_on:
      - db
#  queue:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    command: 'python -u /app/consumer.py'
#    restart: always
#    depends_on:
#      - db
  redis:
    image: 'redis:4-alpine'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_REPLICATION_MODE=master
    ports:
      - '6379:6379'

  db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - $PWD/.dbdata:/var/lib/postgres
    ports:
      - 5430:5432
#  db:
#    image: mongo
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
#      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
#    restart: on-failure
#    ports:
#      - 27017:27017
#    command: mongod
